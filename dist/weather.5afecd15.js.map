{"version":3,"sources":["js/weather.js"],"names":["weather","document","querySelector","COORDS","API_KEY","getWeather","lat","lon","fetch","then","response","json","tem","Math","floor","main","temp","place","name","innerText","saveCoords","myCoords","localStorage","setItem","JSON","stringify","handleGeoSucces","position","latitude","coords","longitude","handleGeoError","console","log","askForCoords","navigator","geolocation","getCurrentPosition","loadCoord","loadedCoords","getItem","parseCoords","parse","init"],"mappings":";AAAA,IAAMA,EAAUC,SAASC,cAAc,eAEjCC,EAAS,SACTC,EAAU,mCAIhB,SAASC,EAAWC,EAAKC,GACvBC,MAA6DF,uDAAAA,OAAAA,EAAWC,SAAAA,OAAAA,EAAaH,WAAAA,OAAAA,EAArF,kBACGK,KAAK,SAACC,GAAaA,OAAAA,EAASC,SAC5BF,KAAK,SAACE,GACCC,IAAAA,EAAMC,KAAKC,MAAMH,EAAKI,KAAKC,MAC3BC,EAAQN,EAAKO,KACnBlB,EAAQmB,UAAeP,GAAAA,OAAAA,EAAWK,SAAAA,OAAAA,KAIxC,SAASG,EAAWC,GAClBC,aAAaC,QAAQpB,EAAQqB,KAAKC,UAAUJ,IAG9C,SAASK,EAAgBC,GACjBC,IAAAA,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAKlCV,EAJiB,CACfQ,SAAAA,EACAE,UAAAA,IAGFzB,EAAWuB,EAAUE,GAGvB,SAASC,IACPC,QAAQC,IAAI,4BAGd,SAASC,IACPC,UAAUC,YAAYC,mBAAmBX,EAAiBK,GAG5D,SAASO,IACDC,IAAAA,EAAejB,aAAakB,QAAQrC,GACtCoC,GAAiB,OAAjBA,EACFL,QACK,CACCO,IAAAA,EAAcjB,KAAKkB,MAAMH,GAC/BlC,EAAWoC,EAAYb,SAAUa,EAAYX,YAIjD,SAASa,IACPL,IAEFK","file":"weather.5afecd15.js","sourceRoot":"..","sourcesContent":["const weather = document.querySelector('.js_weather');\r\n\r\nconst COORDS = 'coords';\r\nconst API_KEY = 'f44797779b7462a164c3e49d062bb7cd';\r\n\r\n//https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\r\n\r\nfunction getWeather(lat, lon) {\r\n  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`)\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      const tem = Math.floor(json.main.temp);\r\n      const place = json.name;\r\n      weather.innerText = `${tem} â„ƒ @ ${place}`;\r\n    });\r\n}\r\n\r\nfunction saveCoords(myCoords) {\r\n  localStorage.setItem(COORDS, JSON.stringify(myCoords));\r\n}\r\n\r\nfunction handleGeoSucces(position) {\r\n  const latitude = position.coords.latitude;\r\n  const longitude = position.coords.longitude;\r\n  const myCoords = {\r\n    latitude,\r\n    longitude,\r\n  };\r\n  saveCoords(myCoords);\r\n  getWeather(latitude, longitude);\r\n}\r\n\r\nfunction handleGeoError() {\r\n  console.log(\"Can't access geolocation\");\r\n}\r\n\r\nfunction askForCoords() {\r\n  navigator.geolocation.getCurrentPosition(handleGeoSucces, handleGeoError);\r\n}\r\n\r\nfunction loadCoord() {\r\n  const loadedCoords = localStorage.getItem(COORDS);\r\n  if (loadedCoords === null) {\r\n    askForCoords();\r\n  } else {\r\n    const parseCoords = JSON.parse(loadedCoords);\r\n    getWeather(parseCoords.latitude, parseCoords.longitude);\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  loadCoord();\r\n}\r\ninit();\r\n"]}